/* DO NOT EDIT THIS FILE - it is machine generated */
#include <jni.h>
/* Header for class jpscpu_LinearSolverMT */

#ifndef _Included_jpscpu_LinearSolverMT
#define _Included_jpscpu_LinearSolverMT
#ifdef __cplusplus
extern "C" {
#endif
#undef jpscpu_LinearSolverMT_SUPERLU_DRIVE_0
#define jpscpu_LinearSolverMT_SUPERLU_DRIVE_0 0L
#undef jpscpu_LinearSolverMT_SUPERLU_DRIVE_1
#define jpscpu_LinearSolverMT_SUPERLU_DRIVE_1 1L
/*
 * Class:     jpscpu_LinearSolverMT
 * Method:    solve0_mt
 * Signature: (III[D[I[I[DI)[D
 */
JNIEXPORT jdoubleArray JNICALL Java_jpscpu_LinearSolverMT_solve0_1mt
  (JNIEnv *, jobject, jint, jint, jint, jdoubleArray, jintArray, jintArray, jdoubleArray, jint);

/*
 * Class:     jpscpu_LinearSolverMT
 * Method:    solve1_mt
 * Signature: (III[D[I[I[DI)[D
 */
JNIEXPORT jdoubleArray JNICALL Java_jpscpu_LinearSolverMT_solve1_1mt
  (JNIEnv *, jobject, jint, jint, jint, jdoubleArray, jintArray, jintArray, jdoubleArray, jint);

/*
 * Class:     jpscpu_LinearSolverMT
 * Method:    solve2_mt
 * Signature: (III[D[I[I[DI[I[I[I[ILjpscpu/SCPformat;Ljpscpu/NCPformat;)[D
 */
JNIEXPORT jdoubleArray JNICALL Java_jpscpu_LinearSolverMT_solve2_1mt
  (JNIEnv *, jobject, jint, jint, jint, jdoubleArray, jintArray, jintArray, jdoubleArray, jint, jintArray, jintArray, jintArray, jintArray, jobject, jobject);

/*
 * Class:     jpscpu_LinearSolverMT
 * Method:    solve3_mt
 * Signature: (III[D[I[I[DI[I[I[I[III[D[I[I[I[I[I[I[I[II[D[I[I[I)[D
 */
JNIEXPORT jdoubleArray JNICALL Java_jpscpu_LinearSolverMT_solve3_1mt
  (JNIEnv *, jobject, jint, jint, jint, jdoubleArray, jintArray, jintArray, jdoubleArray, jint, jintArray, jintArray, jintArray, jintArray, jint, jint, jdoubleArray, jintArray, jintArray, jintArray, jintArray, jintArray, jintArray, jintArray, jintArray, jint, jdoubleArray, jintArray, jintArray, jintArray);

#ifdef __cplusplus
}
#endif
#endif
